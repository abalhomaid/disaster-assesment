Namespace(arch='resnet50', batch_size=32, bottleneck_dim=256, data='Damage', epochs=50, iters_per_epoch=1000, lambda_s=0.01, log='/home/local/QCRI/abalhomaid/projects/disaster/Transfer-Learning-Library/train_jobs/cdan/logs/dann/seed_32/Damage_M2R_SWD_0.01_trade_offs_1', lr=0.01, lr_decay=0.75, lr_gamma=0.001, momentum=0.9, no_hflip=False, no_pool=False, norm_mean=(0.485, 0.456, 0.406), norm_std=(0.229, 0.224, 0.225), per_class_eval=False, phase='analysis', print_freq=100, ratio=[0.75, 1.3333333333333333], resize_size=224, root='/home/local/QCRI/abalhomaid/projects/disaster/Transfer-Learning-Library/data/damage', scale=[0.08, 1.0], scratch=False, seed=32, source=['M'], target=['R'], trade_off=1.0, train_resizing='default', val_resizing='default', weight_decay=0.001, workers=2)
/home/local/QCRI/abalhomaid/projects/disaster/Transfer-Learning-Library/examples/domain_adaptation/image_classification/dann.py:42: UserWarning: You have chosen to seed training. This will turn on the CUDNN deterministic setting, which can slow down your training considerably! You may see unexpected behavior when restarting from checkpoints.
  warnings.warn('You have chosen to seed training. '
train_transform:  Compose(
    Compose(
    ResizeImage(size=(256, 256))
    RandomResizedCrop(size=(224, 224), scale=(0.08, 1.0), ratio=(0.75, 1.3333), interpolation=PIL.Image.BILINEAR)
)
    RandomHorizontalFlip(p=0.5)
    ToTensor()
    Normalize(mean=(0.485, 0.456, 0.406), std=(0.229, 0.224, 0.225))
)
val_transform:  Compose(
    Compose(
    ResizeImage(size=(256, 256))
    CenterCrop(size=(224, 224))
)
    ToTensor()
    Normalize(mean=(0.485, 0.456, 0.406), std=(0.229, 0.224, 0.225))
)
=> using model 'resnet50'
Checkpoint path: /home/local/QCRI/abalhomaid/projects/disaster/Transfer-Learning-Library/train_jobs/cdan/logs/dann/seed_32/Damage_M2R_SWD_0.01_trade_offs_1/checkpoints/best.pth
Checkpoint path: /home/local/QCRI/abalhomaid/projects/disaster/Transfer-Learning-Library/train_jobs/cdan/logs/dann/seed_32/Damage_M2R_SWD_0.01_trade_offs_1/checkpoints/best.pth
Loading model from /home/local/QCRI/abalhomaid/projects/disaster/Transfer-Learning-Library/train_jobs/cdan/logs/dann/seed_32/Damage_M2R_SWD_0.01_trade_offs_1/checkpoints/best.pth
  0%|          | 0/10 [00:00<?, ?it/s] 10%|#         | 1/10 [00:01<00:12,  1.41s/it] 30%|###       | 3/10 [00:01<00:03,  2.31it/s] 50%|#####     | 5/10 [00:01<00:01,  3.90it/s] 60%|######    | 6/10 [00:02<00:01,  3.87it/s] 80%|########  | 8/10 [00:02<00:00,  4.14it/s]100%|##########| 10/10 [00:02<00:00,  4.49it/s]100%|##########| 10/10 [00:02<00:00,  3.40it/s]
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:13,  1.88it/s] 12%|#1        | 3/26 [00:00<00:05,  3.97it/s] 19%|#9        | 5/26 [00:01<00:04,  5.02it/s] 27%|##6       | 7/26 [00:01<00:03,  5.57it/s] 35%|###4      | 9/26 [00:01<00:02,  5.98it/s] 42%|####2     | 11/26 [00:02<00:02,  6.19it/s] 50%|#####     | 13/26 [00:02<00:02,  6.32it/s] 58%|#####7    | 15/26 [00:02<00:01,  6.48it/s] 65%|######5   | 17/26 [00:02<00:01,  6.32it/s] 73%|#######3  | 19/26 [00:03<00:01,  6.48it/s] 81%|########  | 21/26 [00:03<00:00,  6.51it/s] 88%|########8 | 23/26 [00:03<00:00,  6.52it/s] 96%|#########6| 25/26 [00:04<00:00,  6.28it/s]100%|##########| 26/26 [00:04<00:00,  5.92it/s]
Saving t-SNE to /home/local/QCRI/abalhomaid/projects/disaster/Transfer-Learning-Library/train_jobs/cdan/logs/dann/seed_32/Damage_M2R_SWD_0.01_trade_offs_1/visualize/TSNE.pdf
epoch 0 accuracy: 71.8614730834961 A-dist: 0.8744587898254395
epoch 1 accuracy: 71.8614730834961 A-dist: 0.8744587898254395
epoch 2 accuracy: 70.5627670288086 A-dist: 0.8225107192993164
epoch 3 accuracy: 64.06926727294922 A-dist: 0.5627706050872803
epoch 4 accuracy: 71.42857360839844 A-dist: 0.8571429252624512
epoch 5 accuracy: 69.26406860351562 A-dist: 0.7705626487731934
epoch 6 accuracy: 67.09956359863281 A-dist: 0.6839823722839355
epoch 7 accuracy: 65.80086517333984 A-dist: 0.6320345401763916
epoch 8 accuracy: 67.532470703125 A-dist: 0.701298713684082
epoch 9 accuracy: 70.5627670288086 A-dist: 0.8225107192993164
A-distance = tensor(0.8225, device='cuda:0')
