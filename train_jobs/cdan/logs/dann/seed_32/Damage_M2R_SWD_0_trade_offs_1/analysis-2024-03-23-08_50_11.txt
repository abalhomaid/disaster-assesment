Namespace(arch='resnet50', batch_size=32, bottleneck_dim=256, data='Damage', epochs=50, iters_per_epoch=1000, lambda_s=0.0, log='/home/local/QCRI/abalhomaid/projects/disaster/Transfer-Learning-Library/train_jobs/cdan/logs/dann/seed_32/Damage_M2R_SWD_0_trade_offs_1', lr=0.01, lr_decay=0.75, lr_gamma=0.001, momentum=0.9, no_hflip=False, no_pool=False, norm_mean=(0.485, 0.456, 0.406), norm_std=(0.229, 0.224, 0.225), per_class_eval=False, phase='analysis', print_freq=100, ratio=[0.75, 1.3333333333333333], resize_size=224, root='/home/local/QCRI/abalhomaid/projects/disaster/Transfer-Learning-Library/data/damage', scale=[0.08, 1.0], scratch=False, seed=32, source=['M'], target=['R'], trade_off=1.0, train_resizing='default', val_resizing='default', weight_decay=0.001, workers=2)
/home/local/QCRI/abalhomaid/projects/disaster/Transfer-Learning-Library/examples/domain_adaptation/image_classification/dann.py:42: UserWarning: You have chosen to seed training. This will turn on the CUDNN deterministic setting, which can slow down your training considerably! You may see unexpected behavior when restarting from checkpoints.
  warnings.warn('You have chosen to seed training. '
train_transform:  Compose(
    Compose(
    ResizeImage(size=(256, 256))
    RandomResizedCrop(size=(224, 224), scale=(0.08, 1.0), ratio=(0.75, 1.3333), interpolation=PIL.Image.BILINEAR)
)
    RandomHorizontalFlip(p=0.5)
    ToTensor()
    Normalize(mean=(0.485, 0.456, 0.406), std=(0.229, 0.224, 0.225))
)
val_transform:  Compose(
    Compose(
    ResizeImage(size=(256, 256))
    CenterCrop(size=(224, 224))
)
    ToTensor()
    Normalize(mean=(0.485, 0.456, 0.406), std=(0.229, 0.224, 0.225))
)
=> using model 'resnet50'
Checkpoint path: /home/local/QCRI/abalhomaid/projects/disaster/Transfer-Learning-Library/train_jobs/cdan/logs/dann/seed_32/Damage_M2R_SWD_0_trade_offs_1/checkpoints/best.pth
Checkpoint path: /home/local/QCRI/abalhomaid/projects/disaster/Transfer-Learning-Library/train_jobs/cdan/logs/dann/seed_32/Damage_M2R_SWD_0_trade_offs_1/checkpoints/best.pth
Loading model from /home/local/QCRI/abalhomaid/projects/disaster/Transfer-Learning-Library/train_jobs/cdan/logs/dann/seed_32/Damage_M2R_SWD_0_trade_offs_1/checkpoints/best.pth
  0%|          | 0/10 [00:00<?, ?it/s] 10%|#         | 1/10 [00:01<00:13,  1.46s/it] 30%|###       | 3/10 [00:01<00:03,  2.23it/s] 50%|#####     | 5/10 [00:01<00:01,  3.79it/s] 60%|######    | 6/10 [00:02<00:01,  3.64it/s] 80%|########  | 8/10 [00:02<00:00,  3.85it/s]100%|##########| 10/10 [00:03<00:00,  4.17it/s]100%|##########| 10/10 [00:03<00:00,  3.21it/s]
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:12,  1.94it/s] 12%|#1        | 3/26 [00:00<00:05,  3.86it/s] 19%|#9        | 5/26 [00:01<00:04,  4.80it/s] 27%|##6       | 7/26 [00:01<00:03,  5.22it/s] 35%|###4      | 9/26 [00:01<00:03,  5.52it/s] 42%|####2     | 11/26 [00:02<00:02,  5.90it/s] 50%|#####     | 13/26 [00:02<00:02,  5.91it/s] 58%|#####7    | 15/26 [00:02<00:01,  5.99it/s] 65%|######5   | 17/26 [00:03<00:01,  6.08it/s] 73%|#######3  | 19/26 [00:03<00:01,  6.31it/s] 81%|########  | 21/26 [00:03<00:00,  6.24it/s] 88%|########8 | 23/26 [00:04<00:00,  6.28it/s] 96%|#########6| 25/26 [00:04<00:00,  6.27it/s]100%|##########| 26/26 [00:04<00:00,  5.72it/s]
Saving t-SNE to /home/local/QCRI/abalhomaid/projects/disaster/Transfer-Learning-Library/train_jobs/cdan/logs/dann/seed_32/Damage_M2R_SWD_0_trade_offs_1/visualize/TSNE.pdf
epoch 0 accuracy: 72.29437255859375 A-dist: 0.8917748928070068
epoch 1 accuracy: 72.29437255859375 A-dist: 0.8917748928070068
epoch 2 accuracy: 66.66666412353516 A-dist: 0.6666665077209473
epoch 3 accuracy: 64.50216674804688 A-dist: 0.5800867080688477
epoch 4 accuracy: 69.26406860351562 A-dist: 0.7705626487731934
epoch 5 accuracy: 67.532470703125 A-dist: 0.701298713684082
epoch 6 accuracy: 64.93506622314453 A-dist: 0.5974025726318359
epoch 7 accuracy: 64.93506622314453 A-dist: 0.5974025726318359
epoch 8 accuracy: 66.2337646484375 A-dist: 0.649350643157959
epoch 9 accuracy: 67.96537017822266 A-dist: 0.7186148166656494
A-distance = tensor(0.7186, device='cuda:0')
